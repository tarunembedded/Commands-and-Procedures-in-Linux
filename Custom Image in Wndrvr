
Building custom image using bitbake with additional packages such make, gcc, ssh, gdb, vim etc
​
​
**Note: Ensure that you source the oe-init-env by simply cd into your project and typing the following command : source oe-init-env. when you pass this command, you're working directory becomes 'build' directory by default.
​
Step 1:
	To build a custom-layer in wind-river, there are two ways of creating a layer:
​
	1) Manually,
		1.1 Go to ~/your_projectname/ and using 'mkdir' command create a custom-layer using any name
	
		**Note: make sure you specify the 'meta-' prefix as to improve readibility while going through layers.
			layername=any name specified by user.
​
		1.2 cd into ~/your_projectname/meta-layername and mkdir conf folder.
		create file name as layer.conf with 'vi' editor and copy the following meta data.
​
​
		'''
		BPATH .= ":${LAYERDIR}"
​
		# We have recipes-* directories, add to BBFILES
		BBFILES += "${LAYERDIR}/recipes-*/*/*.bb \
            	${LAYERDIR}/recipes-*/*/*.bbappend"
​
		BBFILE_COLLECTIONS += "meta-custom"
		BBFILE_PATTERN_meta-custom = "^${LAYERDIR}/"
		BBFILE_PRIORITY_meta-custom = "6"
​
		LAYERDEPENDS_meta-custom = "core"
		LAYERSERIES_COMPAT_meta-custom = "hardknott wrl"
		'''
​
​
		1.3 Save & exit file.
	
		1.4 Now, return to path ~/your_project/meta-layername and mkdir 'recipes-core' directory
		cd into 'recipes-core' and mkdir 'images' cd into it.
		create a recipe with extension .bb such as 'imagenamebyuser.bb' and paste the following meta-data
​
​
		'''
​
		SUMMARY = "My custom Linux image"
​
		IMAGE_INSTALL = "packagegroup-core-boot ${CORE_IMAGE_EXTRA_INSTALL}"
​
		IMAGE_LINGUAS = " "
​
		LICENSE = "MIT"
​
		inherit core-image
		inherit extrausers
​
		# Set rootfs to 200MiB by default
​
		IMAGE_OVERHEAD_FACTOR ?= "1.0"
		IMAGE_ROOTFS_SIZE ?= "204800"
​
		EXTRA_USERS_PARAMS = "\
        	usermod -P 'toor' root \
        	"
		'''
​
​
		**Note: This image basically adds additional feature of password while login in to root user and allocating 200MiB to root file system.
	
		1.5 Save and exit the file.
​
	2) Using bitbake commmand,
		bitbake-layers create-layer meta-'layername'.
		Using bitbake command, automatically all the neccessary directories and files will be included like conf directory  , recipes-example directory, README file etc so you only have to follow 			from step 1.4.
​
​
Step 2:
 	The next step is to add your layer in the bblayers.conf file before bitbake execution.
	This can be done manually or using bitbake command.
​
	1)Manually :- cd into ~/your_project/build/conf.
		    - open bblayers.conf and add your layer to BBLAYERS variable like this :
					'/home/your_pcname/your_project/your_layername \ ' and then save and exit.
	2)Using bitbake, simply use the command: bitbake-layers add-layer '/home/your_pcname/your_project/your_layername'
		verify in bblayers.conf if your layer has been added into the BBLAYERS variable.
​
​
Step 3:
	In this project we shall include specific packages of interest. In order to add these additional features/packages to your Image, One way is modify your local.conf file.
		
	1. simply cd into  ~/your_projectname/build/conf and open local.conf.
	2. update the following variables in local.conf:
			2.1 BB_NO_NETWORK ?= "0" (**Note: Enables internet access )
			2.2 comment out WRTEMPLATE. (**Note: you can also use this wind-river custom variable to include additional features but for this build simply uncomment)
			2.3 uncomment SSTATE_DIR ?= "${TOPDIR}/sstate-cache" (build task can be accelerated through sstate use)
			2.4 EXTRA_IMAGE_FEATURES ?= " debug-tweaks dbg-pkgs tools-sdk ssh-server-openssh " (**Note: this variables includes dev-tools, debug-tools & ssh as well)
			2.5 IMAGE_INSTALL_append = " openssh-sshd openssh-scp gdb " (**Note: to install additional packages like gdb, scp, openssh etc.)
	3. save and exit.
​
Step 4:
	Before build, make sure you source the build environment.
	use the command, bitbake 'imagenamebyuser'. ( This will take some time.)
	
​
Step 5:
	Once this is complete, cd into ~/your-projectname/build/tmp-glibc/deploy/images/machine-specific and search for files with the name specified by 'imagenamebyuser' with extension .wic and .wic.bmap
​
Step 6:	
	Flash this into your SD card.
	To flash your image into the SD card follow the link 'https://docs.windriver.com/bundle/Wind_River_Linux_Distro_Quick_Start_LTS_21/page/mzb1630524009141.html' until step 3.
​
Step 7: 
	Using bmaptool, enter the following command to copy these files into SD card.
	 =>sudo bmaptool copy --bmap 'imagenamebyuser'.wic.bmap 'imagenamebyuser'.wic /dev/sdx
​
Step 8: 
	Copy BOOT.bin into the /boot partition of your SD Card.
​
Step 9: 
	Follow these steps to set up the environment on your specific machine once you place the SD card into the slot reader.
	9.1 setenv bootargs 'console=ttyPS0,115200n8 root=/dev/mmcblk0p2 rw  rootfstype=ext4 rootwait earlycon clk_ignore_unused   uio_pdrv_genirq.of_id=generic-uio cpuidle.off=1 maxcpus=4'
	9.2 mmc rescan
	9.3 fatload mmc 0 0x10000000 Image
	9.4 fatload mmc 0 0x11800000 *.dtb (look for file having .dtb extension)
	9.5 booti 0x10000000 - 0x11800000
​
Step 10: 
	Once your machine is booted, you are required to enter the credentials. login is 'root' and password is pre-defined in step 1.4 under EXTRA_USERS_PARAMS.
​
Step 11: 
	Verify the packages installed by typing commands specific to the packages installed.
